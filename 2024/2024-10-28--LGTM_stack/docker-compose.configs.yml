configs:
  grafana_config:
    content: |
      [feature_toggles]
      enable = true
      exploreMetrics = true
  grafana_datasources:
    content: |-
      apiVersion: 1
      datasources:
      - access: "proxy"
        basicAuth: false
        isDefault: false
        name: "loki"
        orgId: 1
        type: "loki"
        uid: "loki"
        url: "http://loki:3100"
        version: 1
      - access: "proxy"
        basicAuth: false
        isDefault: false
        jsonData:
          httpHeaderName1: "X-Scope-OrgID"
          implementation: "cortex"
        name: "mimir"
        secureJsonData:
          httpHeaderValue1: "demo"
        type: "prometheus"
        uid: "mimir"
        url: "http://mimir:8080/prometheus"
      - access: "proxy"
        basicAuth: false
        isDefault: true
        name: "prometheus"
        type: "prometheus"
        uid: "prometheus"
        url: "http://prometheus:9090"
      - access: "proxy"
        basicAuth: false
        jsonData:
          nodeGraph:
            enabled: true
          serviceMap:
            datasourceUid: "mimir"
          tracesToLogs:
            datasourceUid:
              access: "proxy"
              basicAuth: false
              isDefault: false
              name: "loki"
              orgId: 1
              type: "loki"
              uid: "loki"
              url: "http://loki:3100"
              version: 1
            filterByTraceID: false
            spanEndTimeShift: "500ms"
            spanStartTimeShift: "-500ms"
            tags:
            - "beast"
        name: "tempo"
        type: "tempo"
        uid: "tempo"
        url: "http://tempo:3200"
  loki_config:
    content: |-
      auth_enabled: false
      common:
        path_prefix: "/loki"
        replication_factor: 1
        ring:
          instance_addr: "127.0.0.1"
          kvstore:
            store: "inmemory"
      limits_config:
        ingestion_burst_size_mb: 64
        ingestion_rate_mb: 32
        max_cache_freshness_per_query: "10m"
        max_global_streams_per_user: 5000
        max_line_size: "2MB"
        per_stream_rate_limit: "32MB"
        per_stream_rate_limit_burst: "64MB"
        reject_old_samples: true
        reject_old_samples_max_age: "168h"
        volume_enabled: true
      ruler:
        storage:
          local:
            directory: "/loki/rules"
          type: "local"
      schema_config:
        configs:
        - from: "2020-05-15"
          index:
            period: "24h"
            prefix: "index_"
          object_store: "filesystem"
          schema: "v13"
          store: "tsdb"
      server:
        http_listen_port: 3100
      storage_config:
        filesystem:
          directory: "/loki/chunks"
      table_manager:
        retention_deletes_enabled: true
        retention_period: "672h"
  mimir_config:
    content: |-
      blocks_storage:
        storage_prefix: "blocks"
        tsdb:
          dir: "/data/ingester"
      common:
        storage:
          backend: "s3"
          s3:
            access_key_id: "mimir"
            bucket_name: "mimir"
            endpoint: "minio:9000"
            insecure: true
            secret_access_key: "supersecret"
      ingester:
        ring:
          replication_factor: 1
      memberlist:
        join_members:
        - "mimir"
      ruler:
        alertmanager_url: "http://127.0.0.1:8080/alertmanager"
        ring:
          heartbeat_period: "2s"
          heartbeat_timeout: "10s"
        rule_path: "/data/ruler"
      server:
        log_level: "warn"
      target: "all,overrides-exporter"
  prometheus_config:
    content: |-
      global:
        scrape_interval: "15s"
      remote_write:
      - headers:
          X-Scope-OrgID: "demo"
        url: "http://mimir:8080/api/v1/push"
      scrape_configs:
      - job_name: "prometheus"
        static_configs:
        - targets:
          - "prometheus:9090"
      - job_name: "loki"
        static_configs:
        - targets:
          - "loki:3100"
      - job_name: "promtail"
        static_configs:
        - targets:
          - "promtail:9080"
      - job_name: "grafana"
        static_configs:
        - targets:
          - "grafana:3000"
      - job_name: "tempo"
        static_configs:
        - targets:
          - "tempo:3200"
  promtail_config:
    content: |-
      clients:
      - url: "http://loki:3100/loki/api/v1/push"
      positions:
        filename: "/tmp/positions.yaml"
      scrape_configs:
      - job_name: "syslog"
        relabel_configs:
        - source_labels:
          - "__syslog_connection_ip_address"
          target_label: "host"
        - source_labels:
          - "__syslog_message_severity"
          target_label: "severity"
        - source_labels:
          - "__syslog_message_facility"
          target_label: "facility"
        - source_labels:
          - "__syslog_message_hostname"
          target_label: "hostname"
        - regex: "(.*)"
          replacement: "syslog/$${1}"
          source_labels:
          - "__syslog_message_facility"
          target_label: "service_name"
        syslog:
          labels:
            job: "syslog"
          listen_address: "0.0.0.0:1514"
          listen_protocol: "udp"
      - docker_sd_configs:
        - host: "unix:///var/run/docker.sock"
          refresh_interval: "5s"
        job_name: "docker"
        relabel_configs:
        - regex: "/(.*)"
          source_labels:
          - "__meta_docker_container_name"
          target_label: "container"
        - regex: "/(.*)"
          source_labels:
          - "__meta_docker_container_name"
          target_label: "service_name"
        - source_labels:
          - "__meta_docker_container_log_stream"
          target_label: "logstream"
        - source_labels:
          - "__meta_docker_container_label_logging_jobname"
          target_label: "job"
      server:
        http_listen_address: "0.0.0.0"
        http_listen_port: 9080
  tempo_config:
    content: |-
      compactor:
        compaction:
          block_retention: "1h"
          compacted_block_retention: "10m"
          compaction_window: "1h"
          max_block_bytes: 100000000
      distributor:
        receivers:
          jaeger:
            protocols:
              grpc: null
              thrift_binary: null
              thrift_compact: null
              thrift_http: null
          otlp:
            protocols:
              grpc: null
              http: null
          zipkin: null
      ingester:
        max_block_bytes: 1000000
        max_block_duration: "5m"
        trace_idle_period: "10s"
      metrics_generator:
        processor:
          local_blocks:
            flush_to_storage: true
          service_graphs:
            dimensions:
            - "http.method"
            - "http.target"
            - "http.status_code"
            - "service.version"
          span_metrics:
            dimensions:
            - "http.method"
            - "http.target"
            - "http.status_code"
            - "service.version"
        registry:
          collection_interval: "5s"
          external_labels:
            group: "mythical"
            source: "tempo"
        storage:
          path: "/tempo_stor/generator/wal"
          remote_write:
          - send_exemplars: true
            url: "http://mimir:9009/api/v1/push"
        traces_storage:
          path: "/tempo_stor/generator/traces"
      overrides:
        metrics_generator_processors:
        - "service-graphs"
        - "span-metrics"
        - "local-blocks"
      server:
        http_listen_port: 3200
      storage:
        trace:
          backend: "local"
          block:
            bloom_filter_false_positive: 0.050000000000000003
          local:
            path: "/tempo_stor/blocks"
          pool:
            max_workers: 100
            queue_depth: 10000
          wal:
            path: "/tempo_stor/wal"
      stream_over_http_enabled: true
