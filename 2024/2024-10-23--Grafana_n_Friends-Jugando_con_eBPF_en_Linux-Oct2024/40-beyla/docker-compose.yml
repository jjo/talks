include:
  - docker-compose.configs.yml
services:
  beyla:
    container_name: beyla
    environment:
      - BEYLA_PROMETHEUS_PORT=9400
      - BEYLA_OPEN_PORT=8080
    image: grafana/beyla:latest
    pid: service:simplesrv
    ports:
      - 9400:9400
    privileged: true
  grafana:
    configs:
      - source: grafana_config
        target: /etc/grafana/grafana.ini
      - source: grafana_datasources
        target: /etc/grafana/provisioning/datasources/datasources.yaml
    container_name: grafana
    depends_on:
      - prometheus
      - loki
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_USERS_DEFAULT_THEME=light
    image: grafana/grafana:11.3.0-ubuntu
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana
  k6:
    command: run --out json /k6/load_test.js
    container_name: k6
    environment: []
    image: loadimpact/k6:latest
    ports: []
    restart: unless-stopped
    volumes:
      - ./k6/load_test.js:/k6/load_test.js
  loki:
    command: -config.file=/etc/loki/local-config.yaml
    configs:
      - source: loki_config
        target: /etc/loki/local-config.yaml
    container_name: loki
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 30s
      test:
        - CMD-SHELL
        - wget -q --tries=1 -O- http://localhost:3100/ready || exit 1
      timeout: 3s
    image: grafana/loki:3.2.1
    ports:
      - 3100:3100
      - 9096:9096
    restart: unless-stopped
    volumes:
      - loki-storage:/loki
  prometheus:
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    container_name: prometheus
    image: prom/prometheus:v3.0.0-beta.1
    ports:
      - 9090:9090
    volumes:
      - prometheus-storage:/prometheus
  promtail:
    command: -config.file=/etc/promtail/promtail.yml
    configs:
      - source: promtail_config
        target: /etc/promtail/promtail.yml
    container_name: promtail
    depends_on:
      - loki
    image: grafana/promtail:latest
    ports:
      - 9080:9080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  simplesrv:
    build:
      context: simplesrv/
      dockerfile: Dockerfile
    container_name: simplesrv
    environment: []
    ports:
      - 8080:8080
volumes:
  grafana-storage: {}
  loki-storage: {}
  prometheus-storage: {}
